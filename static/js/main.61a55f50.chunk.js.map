{"version":3,"sources":["tweets/components.js","lookup/components.js","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["TweetsComponent","props","textAreaRef","React","createRef","useState","newTweets","setNewTweets","className","onSubmit","event","preventDefault","newValue","current","value","tempNewTweets","unshift","content","likes","id","ref","required","name","type","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","useEffect","final","concat","length","callback","xhr","XMLHttpRequest","responseType","open","onload","response","status","onerror","e","console","log","send","loadTweets","alert","map","item","index","Tweet","tweet","ActionBtn","action","display","setLikes","userLike","setUserLike","actionDisplay","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appRootEl","document","getElementById","ReactDOM","render"],"mappings":"qOAGO,SAASA,EAAgBC,GAC9B,IAAMC,EAAcC,IAAMC,YADW,EAEHC,mBAAS,IAFN,mBAE9BC,EAF8B,KAEnBC,EAFmB,KAiBrC,OAAO,sBAAKC,UAAWP,EAAMO,UAAtB,UACL,qBAAKA,UAAU,cAAf,SACE,uBAAMC,SAhBgB,SAACC,GACzBA,EAAMC,iBACN,IAAMC,EAAWV,EAAYW,QAAQC,MACjCC,EAAa,YAAOT,GAExBS,EAAcC,QAAQ,CACpBC,QAASL,EACTM,MAAO,EACPC,GAAI,OAENZ,EAAaQ,GACbb,EAAYW,QAAQC,MAAQ,IAK1B,UACE,0BAAUM,IAAKlB,EAAamB,UAAU,EAAMb,UAAU,eAAec,KAAK,UAI1E,wBAAQC,KAAK,SAASf,UAAU,uBAAhC,wBAGF,cAACgB,EAAD,CAAYlB,UAAWA,OAItB,SAASkB,EAAWvB,GAAQ,IAAD,EACII,mBAAS,IADb,mBACzBoB,EADyB,KACbC,EADa,OAEJrB,mBAAS,IAFL,mBAEzBsB,EAFyB,KAEjBC,EAFiB,KA2BhC,OAtBAC,qBAAU,WACR,IAAMC,EAAQ,YAAI7B,EAAMK,WAAWyB,OAAON,GACtCK,EAAME,SAAWL,EAAOK,QAC1BJ,EAAUE,KAGX,CAAC7B,EAAMK,UAAWqB,EAAQF,IAE7BI,qBAAU,YC/CL,SAAoBI,GACvB,IAAMC,EAAM,IAAIC,eAKhBD,EAAIE,aAFiB,OAGrBF,EAAIG,KALW,MACH,qCAKZH,EAAII,OAAS,WACXL,EAASC,EAAIK,SAAUL,EAAIM,SAG/BN,EAAIO,QAAU,SAAUC,GACtBC,QAAQC,IAAIF,GACZT,EAAS,CAAC,QAAW,4BAA6B,MAGpDC,EAAIW,ODyCFC,EATmB,SAACP,EAAUC,GAEb,MAAXA,EACFd,EAAca,GAEdQ,MAAM,4BAMT,IACIpB,EAAOqB,KAAI,SAACC,EAAMC,GACvB,OAAO,cAACC,EAAD,CAAOC,MAAOH,EAAMzC,UAAU,uCAA9B,UAA4E0C,EAA5E,kBAIJ,SAASC,EAAMlD,GAAQ,IACnBmD,EAASnD,EAATmD,MACD5C,EAAYP,EAAMO,UAAYP,EAAMO,UAAY,0BACtD,OAAO,sBAAKA,UAAWA,EAAhB,UACL,kCAAK4C,EAAMjC,GAAX,MAAkBiC,EAAMnC,QAAxB,OACA,sBAAKT,UAAU,gBAAf,UACE,cAAC6C,EAAD,CAAWD,MAAOA,EAAOE,OAAS,CAAC/B,KAAM,OAAQgC,QAAS,WAC1D,cAACF,EAAD,CAAWD,MAAOA,EAAOE,OAAS,CAAC/B,KAAM,SAAUgC,QAAS,YAC5D,cAACF,EAAD,CAAWD,MAAOA,EAAOE,OAAS,CAAC/B,KAAM,UAAWgC,QAAS,mBAK7D,SAASF,EAAUpD,GAAQ,IACxBmD,EAAiBnD,EAAjBmD,MAAOE,EAAUrD,EAAVqD,OADgB,EAEJjD,mBAAS+C,EAAMlC,MAAQkC,EAAMlC,MAAQ,GAFjC,mBAEvBA,EAFuB,KAEhBsC,EAFgB,OAGEnD,oBAA4B,IAAnB+C,EAAMK,UAAoBL,EAAMK,UAH3C,mBAGvBA,EAHuB,KAGbC,EAHa,KAIxBlD,EAAYP,EAAMO,UAAYP,EAAMO,UAAY,yBAChDmD,EAAgBL,EAAOC,QAAUD,EAAOC,QAAU,SAclDA,EAA0B,SAAhBD,EAAO/B,KAAP,UAA4BL,EAA5B,YAAqCyC,GAAkBA,EACvE,OAAO,yBAAQnD,UAAYA,EAAWoD,QAdlB,SAAClD,GACnBA,EAAMC,iBACc,SAAhB2C,EAAO/B,QACQ,IAAbkC,GAEJD,EAAStC,EAAQ,GACjBwC,GAAY,KAEVF,EAAStC,EAAQ,GACjBwC,GAAY,MAKX,cAAuDH,KEnGnD,I,MC+BAM,ICnBAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCARQ,EAAYC,SAASC,eAAe,QACtCF,GACFG,IAASC,OAAO,cAAC3E,EAAD,IAAqBuE,GAOvCT,M","file":"static/js/main.61a55f50.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {loadTweets} from '../lookup'\n\nexport function TweetsComponent(props) {\n  const textAreaRef = React.createRef()\n  const [newTweets, setNewTweets] = useState([])\n  const handleTweetSubmit = (event) => {\n    event.preventDefault()\n    const newValue = textAreaRef.current.value\n    let tempNewTweets = [...newTweets]\n    // change this to a server side call\n    tempNewTweets.unshift({\n      content: newValue,\n      likes: 0,\n      id: 1234\n    })\n    setNewTweets(tempNewTweets)\n    textAreaRef.current.value = ''\n  }\n\n  return <div className={props.className}>\n    <div className=\"col-12 mb-3\">\n      <form onSubmit={handleTweetSubmit}>\n        <textarea ref={textAreaRef} required={true} className=\"form-control\" name=\"tweet\">\n\n        </textarea>\n\n        <button type=\"submit\" className=\"btn btn-primary my-3\">Tweet</button>\n      </form>\n    </div>\n      <TweetsList newTweets={newTweets}/>\n  </div>\n}\n\nexport function TweetsList(props) {\n  const [tweetsInit, setTweetsInit] = useState([])\n  const [tweets, setTweets] = useState([])\n  // console.log(props.newTweets)\n\n  useEffect(() => {\n    const final = [...props.newTweets].concat(tweetsInit)\n    if (final.length !== tweets.length) {\n      setTweets(final)\n    }\n    \n  }, [props.newTweets, tweets, tweetsInit])\n\n  useEffect(() => {\n    // do my lookup\n    const myCallback = (response, status) => {\n      //console.log(response, status)\n      if (status === 200) {\n        setTweetsInit(response)\n      } else {\n        alert(\"There was an error!\")\n      } \n    }\n\n    loadTweets(myCallback)\n    \n  }, [])\n  return tweets.map((item, index) => {\n    return <Tweet tweet={item} className='my-5 py-5 border bg-white text-dark' key={`${index}-{item.id}`}/>\n  })\n}\n\nexport function Tweet(props) {\n    const {tweet} = props\n    const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n    return <div className={className}>\n      <p> {tweet.id} - {tweet.content} </p>\n      <div className='btn btn-group'>\n        <ActionBtn tweet={tweet} action= {{type: \"like\", display: \"Likes\"}} />\n        <ActionBtn tweet={tweet} action= {{type: \"unlike\", display: \"Unlike\"}} />\n        <ActionBtn tweet={tweet} action= {{type: \"retweet\", display: \"Retweet\"}} />\n      </div>\n    </div>\n  }\n  \n export function ActionBtn(props) {\n    const {tweet, action} = props\n    const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0)\n    const [userLike, setUserLike] = useState(tweet.userLike === true ? tweet.userLike : false)\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\n    const actionDisplay = action.display ? action.display : 'Action'\n    const handleClick = (event) => {\n      event.preventDefault()\n      if (action.type === 'like'){\n        if (userLike === true) {\n          //perhaps I unlike it?\n        setLikes(likes - 1)\n        setUserLike(false)\n        } else{\n          setLikes(likes + 1)\n          setUserLike(true)\n        } \n      }\n    }\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\n    return <button className= {className} onClick={handleClick}> {display}</button>\n  }\n  ","export function loadTweets(callback){\n    const xhr = new XMLHttpRequest()\n    const method = 'GET'\n    const url = \"http://localhost:8000/api/tweets/\"\n    const responseType = \"json\"\n  \n    xhr.responseType = responseType\n    xhr.open(method, url)\n    xhr.onload = function() {\n      callback(xhr.response, xhr.status)\n  }\n  \n  xhr.onerror = function (e) {\n    console.log(e)\n    callback({\"message\": \"The request was an error\"}, 400)\n  }\n  \n  xhr.send()\n  }","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport {TweetsComponent} from './tweets'\nimport logo from './logo.svg';\nimport './App.css';\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {TweetsComponent} from './tweets';\nimport reportWebVitals from './reportWebVitals';\n\nconst appRootEl = document.getElementById(\"root\")\nif (appRootEl) {\n  ReactDOM.render(<TweetsComponent />, appRootEl)\n}\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}